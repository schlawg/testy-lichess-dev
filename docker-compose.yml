version: '3.8'

services:

  mongodb:
    container_name: testy-mongodb
    image: docker.io/library/mongo:latest
    networks:
      - lila-network
    ports: 
      - "127.0.0.1:37017:27017"
    volumes:
      - ../database:/data/db
    restart: "unless-stopped"

  redis:
    container_name: testy-redis
    image: docker.io/library/redis:alpine
    networks:
      - lila-network
    restart: "unless-stopped"

  elasticsearch:
    container_name: testy-elasticsearch
    image: docker.io/library/elasticsearch:7.17.4
    networks:
      - lila-network
    environment:
      discovery.type: single-node
      http.cors.allow-origin: /.*/
      http.cors.enabled: "true"
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms1g -Xmx4g"
      ES_DISTRIBUTION_FLAVOR: oss
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:9200 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - /opt/es-data:/usr/share/elasticsearch/data

  picfit:
    container_name: testy-picfit
    image: docker.io/thoas/picfit:0.9.0
    working_dir: /etc/picfit
    networks:
      - lila-network
    ports:
      - "127.0.0.1:13001:3001"
    volumes:
      - ../picfit:/etc/picfit
      - .:/config
    restart: "no"
    entrypoint: /picfit --config /config/picfit.json

  lila-search-ingestor:
    container_name: testy-lila-search-ingestor
    image: docker.io/schlawg/ingestor:v3.2.0-UBLOG
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - lila-network
    environment:
      - APP_LOG_LEVEL=ERROR
      - ELASTIC_URI=http://elasticsearch:9200
      - ELASTIC4S_LOG_LEVEL=ERROR
      - MONGO_DATABASE=lichess
      - MONGO_STUDY_DATABASE=lichess
      - MONGO_DRIVER_LOG_LEVEL=ERROR
      - MONGO_URI=mongodb://mongodb
      - MONGO_STUDY_URI=mongodb://mongodb
      - OTEL_METRICS_EXPORTER=none
      - OTEL_TRACES_EXPORTER=none
    restart: "no"
    entrypoint: ["sh", "-c", "until curl -sf http://elasticsearch:9200; do sleep 2; done && /opt/docker/bin/cli 'index --all --since 0'"]
  
  lila-search:
    container_name: testy-lila-search
    image: docker.io/schlawg/lila-search-app:v3.2.0-UBLOG
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTIC_URI=http://elasticsearch:9200
      - OTEL_METRICS_EXPORTER=none
      - OTEL_TRACES_EXPORTER=none
    networks:
      - lila-network
    restart: unless-stopped
    entrypoint: ["sh", "-c", "until curl -sf http://elasticsearch:9200; do sleep 5; done && /opt/docker/bin/lila-search"]

  lila:
    container_name: testy-lila
    image: docker.io/library/eclipse-temurin:21
    working_dir: /app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9663"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - lila-network
    ports:
      - "127.0.0.1:19663:9663"
    volumes:
      - ../deploy:/app
      - ./conf:/conf
      - ./conf/logger.dev.xml:/app/conf/logger.dev.xml
    restart: "no"
    entrypoint: bin/lila -Dconfig.file=/conf/application.conf

  lila-fishnet:
    container_name: testy-lila-fishnet
    image: ghcr.io/lichess-org/lila-fishnet:latest
    depends_on:
      lila:
        condition: service_healthy
    networks:
      - lila-network
    volumes:
      - ./conf:/conf
    restart: "no"
    command: ["-Dredis.host=redis","-Dlogback.configurationFile=/conf/logger.dev.xml"]
    
  lila-ws:
    container_name: testy-lila-ws
    image: ghcr.io/lichess-org/lila-ws:latest
    networks:
      - lila-network
    ports:
     - "127.0.0.1:19664:9664"
    restart: "no"
    command: ["-Dmongo.uri=mongodb://mongodb", "-Dredis.uri=redis://redis", "-Dcsrf.origin=https://testy.lichess.dev", "-Dcookie.name=testy"]

  fishnet:
    container_name: testy-fishnet
    image: docker.io/niklasf/fishnet
    networks:
      - lila-network
    restart: "no"
    entrypoint: /fishnet --endpoint http://lila:9663/fishnet --max-backoff 3

  fishnet-vs:
    container_name: testy-fishnet-vs
    image: docker.io/niklasf/fishnet
    networks:
      - lila-network
    restart: "no"
    entrypoint: /fishnet --endpoint http://lila-fishnet:9665/fishnet --max-backoff 3

  # debug:
  #   container_name: testy-debug
  #   build:
  #     context: ./debug
  #     dockerfile: Dockerfile
  #   deploy:
  #     restart_policy:
  #       condition: none
  #   networks:
  #     - lila-network
  #   volumes:
  #     - .:/ws

networks:
  lila-network:
    driver: bridge
